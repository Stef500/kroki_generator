name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --extra test --extra dev

    - name: Lint with ruff
      run: |
        uv run ruff check src tests

    - name: Format check with black
      run: |
        uv run black --check src tests

    - name: Run unit tests
      run: |
        uv run pytest --cov=src --cov-report=term-missing --cov-report=json -v tests/test_routes.py tests/test_kroki_client.py tests/test_main.py tests/test_config.py

    - name: Coverage check
      run: |
        uv run python -c "
        import json
        with open('coverage.json') as f:
            cov = json.load(f)
        pct = cov['totals']['percent_covered']
        print(f'Coverage: {pct:.1f}%')
        if pct < 80:
            exit(1)
        "

    - name: Run integration tests (optional)
      continue-on-error: true
      run: |
        # Start services in background for integration tests
        docker compose up -d --wait
        uv run pytest -m integration tests/test_integration.py || true
        docker compose down

  docker-debug:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Debug workflow conditions
      run: |
        echo "=== Workflow Debug Info ==="
        echo "Branch: ${{ github.ref }}"
        echo "Event: ${{ github.event_name }}"
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "=== Checking Secrets ==="
        echo "DOCKERHUB_USERNAME exists: ${{ secrets.DOCKERHUB_USERNAME != '' }}"
        echo "DOCKERHUB_TOKEN exists: ${{ secrets.DOCKERHUB_TOKEN != '' }}"
        echo "=== Test Job Status ==="
        echo "Test job completed successfully"

  docker:
    runs-on: ubuntu-latest
    needs: [test, docker-debug]
    if: github.ref == 'refs/heads/main' && secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != ''
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/kroki-flask-generator
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm -d -p 8080:8080 --name test-app ${{ secrets.DOCKERHUB_USERNAME }}/kroki-flask-generator:latest
        sleep 15
        curl -f http://localhost:8080/health || exit 1
        docker stop test-app